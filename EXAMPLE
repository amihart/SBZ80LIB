option strict
acls
'-------------------------------------------------
'Compatibility functions
'-------------------------------------------------
def C_UPPER$(s$)
  var r$ = ""
  var i%
  for i% = 0 to len(s$) - 1
    var v% = asc(s$[i%])
    if v% >= asc("a") && v% <= asc("z") then
      push r$, chr$(v% - (asc("a") - asc("A")))
    else
      push r$, chr$(v%)
    endif
  next
  return r$
end
def C_HARDWARE$()
  if chkcall("system$") then
    return "Raspberry Pi"
  elseif chkcall("emujoyclr") then
    return "PasocomMini"
  elseif chkcall("irread") then
    return "Nintendo Switch"
  else
    return "Nintendo 3DS"
  endif
  return "Unknown"
end
def C_LOAD(fname$)
  if len(fname$) < 5 then
    print "Illegal format(C_LOAD)"
    stop
  endif
  var fmt$ = C_UPPER$(left$(fname$, 4))
  var cmd$ = ""
  if C_HARDWARE$() == "Nintendo Switch" then
    return call("loadv", fname$)
  elseif fmt$ == "TXT:" then
    return call("load", fname$, 0)
  else
    dim tmp[0]
    call "load", fname$, tmp, 0
    return tmp
  endif
end
def C_COLOR fg%
  if fg% < 1 || fg% > 15 then
    print "Out of range(C_COLOR)"
    stop
  endif
  dim m%[1]
  push m%, rgb(0, 0, 0)
  push m%, rgb(128, 0, 0)
  push m%, rgb(255, 0, 0)
  push m%, rgb(0, 128, 0)
  push m%, rgb(0, 255, 0)
  push m%, rgb(128, 128, 0)
  push m%, rgb(255, 255, 0)
  push m%, rgb(0, 0, 128)
  push m%, rgb(0, 0, 255)
  push m%, rgb(128, 0, 128)
  push m%, rgb(255, 0, 255)
  push m%, rgb(0, 128, 128)
  push m%, rgb(0, 255, 255)
  push m%, rgb(128, 128, 128)
  push m%, rgb(255, 255, 255)
  var cmd$ = ""
  if C_HARDWARE$() == "Nintendo 3DS" then
    call "color", fg%
  else
    call "color", m%[fg%]
  endif
end
def C_EVAL(slot%, cmd$)
  prgedit slot%
  prgdel -1
  prgset "common def C_FUNC()"
  prgset cmd$
  prgset "end"
  exec slot%
  return C_FUNC()
end
def C_MILLISEC%()
  if C_HARDWARE$() == "Nintendo Switch" then
    return C_EVAL(2, "return millisec()")
  else
    return C_EVAL(2, "return millisec")
  endif
end
'-------------------------------------------------
'Main program
'-------------------------------------------------
'Load the library.
var lib$ = C_LOAD("TXT:SBZ80.LIB")
prgedit 1
prgdel -1
prgset lib$ 
exec 1
'Custom function example.
common def CUSTOM_FUNC
  var ret% = rnd(1000)
  print "A custom function was called!"
  print "Parameters: ";
  print EMUPARAM%(0);
  print ", ";
  print EMUPARAM%(1)
  print "Return value: ";
  print ret%
  EMURET ret%
end
'Define our callback functions.
var stdin$ = ""
var itimer% = C_MILLISEC%()
common def PORT_OUT PORT%, VALUE%
  if PORT% == 0 then
    print chr$(VALUE%);
  elseif PORT% == 1 then
    CUSTOM_FUNC
  endif
end
common def PORT_IN(PORT%)
  if PORT% == 0 THEN
    if len(stdin$) == 0 then
      input stdin$
      push stdin$, chr$(10)
    endif
    var ret% = asc(stdin$[0])
    stdin$ = right$(stdin$, len(stdin$) - 1)
    return ret%
  endif
  return 0
end
common def INTERRUPT MODE% out FIRE%, VALUE%
  VALUE% = 0
  var ntimer% = C_MILLISEC%()
  if MODE% == 1 && (ntimer% - itimer%) > 150 then
    itimer% = ntimer%
    FIRE% = 1
  else
    FIRE% = 0
  endif
end
'Inform the interpreter.
emupocb "PORT_OUT"
emupicb "PORT_IN"
emuintcb "INTERRUPT"
'Example menu.
var choice$
@beginning
C_COLOR 15
choice$ = ""
'Get user choice.
while choice$ != "1" && choice$ != "2" && choice$ != "3"
  stdin$ = ""
  print "Which example to load?"
  print " 1) File assembled from EXAMPLE.ASM by the assembler Z80ASM"
  print " 2) File compiled from EXAMPLE.C by the compiler SDCC"
  print " 3) File compiled from CUSTFUNC.C which demonstrates the C code calling a SmileBASIC function."
  print " 4) Exit"
  input choice$
  if choice$ == "4" then
    stop
  endif
  if choice$ != "1" && choice$ != "2" && choice$ != "3" then
    C_COLOR 3
    print "Invalid choice."
    C_COLOR 15
    print "Press any key to continue . . ."
    while len(inkey$()) > 0:wend
    while len(inkey$()) == 0:wend
    cls
  endif
wend
'Load the example program.
if choice$ == "1" then
  emuload 0, "EXAMPLE.HEX"
elseif choice$ == "2" then
  emuload 0, "EXAMPLE_C.HEX"
elseif choice$ == "3" then
  emuload 0, "CUSTFUNC.HEX"
endif
'Run the example program.
emurun 0
'Finish up
C_COLOR 5
print "Demonstration complete."
C_COLOR 15
print "Press any key to continue . . ."
while len(inkey$()) > 0:wend
while len(inkey$()) == 0:wend
cls
goto @beginning

